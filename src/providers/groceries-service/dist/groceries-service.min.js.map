{"version":3,"sources":["groceries-service.ts"],"names":["core_1","require","Observable_1","operators_1","rxjs_1","GroceriesServiceProvider","this","items","baseURL","console","log","dataChangeSubject","Subject","dataChanged$","asObservable","prototype","getItems","http","get","pipe","extractData","res","handleError","error","errMsg","instaceof","Response","message","toString","Observable","removeItem","id","_this","subscribe","next","addItem","item","post","editItem","index","put","_id","__decorate","Injectable","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBAEAC,aAAAD,QAAA,mBACAE,YAAAF,QAAA,kBACAG,OAAAH,QAAA,QAQAI,yBAAA,WAUE,SAAAA,IARAC,KAAAC,MAAQ,GAMRD,KAAAE,QAAU,wBAGRC,QAAQC,IAAI,2CAEZJ,KAAKK,kBAAoB,IAAIP,OAAAQ,QAC7BN,KAAKO,aAAeP,KAAKK,kBAAkBG,eAiD/C,OA9CET,EAAAU,UAAAC,SAAA,WACE,OAAOV,KAAKW,KAAKC,IAAIZ,KAAKE,QAAU,kBAAkBW,QAKhDd,EAAAU,UAAAK,YAAR,SAAoBC,GAElB,OADWA,GACI,IAGThB,EAAAU,UAAAO,YAAR,SAAoBC,GAClB,IAAIC,EAQN,OAPMD,GAAME,UAAUC,SACT,2CAGTF,EAASD,EAAMI,QAAUJ,EAAMI,QAAUJ,EAAMK,WAEnDnB,QAAQc,MAAMC,GACPtB,aAAA2B,WAAgB,MAACL,IAGxBnB,EAAAU,UAAAe,WAAA,SAAWC,GAAX,IAAAC,EAAA1B,KACEG,QAAQC,IAAI,2BAA4BqB,GACxCzB,KAAKW,KAAW,OAACX,KAAKE,QAAU,kBAAoBuB,GAAIE,UAAU,SAAAZ,GAChEW,EAAKzB,MAAQc,EACbW,EAAKrB,kBAAkBuB,MAAK,MAIhC7B,EAAAU,UAAAoB,QAAA,SAAQC,GAAR,IAAAJ,EAAA1B,KACEA,KAAKW,KAAKoB,KAAK/B,KAAKE,QAAU,iBAAkB4B,GAAMH,UAAU,SAAAZ,GAC9DW,EAAKzB,MAAQc,EACbW,EAAKrB,kBAAkBuB,MAAK,MAIhC7B,EAAAU,UAAAuB,SAAA,SAASF,EAAMG,GAAf,IAAAP,EAAA1B,KACEG,QAAQC,IAAI,kBAAmB0B,GAC/B9B,KAAKW,KAAKuB,IAAIlC,KAAKE,QAAU,kBAAoB4B,EAAKK,IAAKL,GAAMH,UAAU,SAAAZ,GACzEW,EAAKzB,MAAQc,EACbW,EAAKrB,kBAAkBuB,MAAK,MA3DrB7B,EAAwBqC,WAAA,CADpC1C,OAAA2C,cACYtC,GAAb,GAAauC,QAAAvC,yBAAAA","file":"groceries-service.min.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { map, catchError } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n/*\n  Generated class for the GroceriesServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class GroceriesServiceProvider {\n\n  items = [];\n\n  dataChanged$: Observable<boolean>;\n\n  private dataChangeSubject: Subject<boolean>;\n\n  baseURL = \"http://localhost:8080\";\n\n  constructor() {\n    console.log('Hello GroceriesServiceProvider Provider');\n\n    this.dataChangeSubject = new Subject<boolean>();\n    this.dataChanged$ = this.dataChangeSubject.asObservable();\n  }\n\n  getItems() {\n    return this.http.get(this.baseURL + '/api/groceries').pipe(;\n    map(this.extractData),\n    catchError(this.handleError));\n    }\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || {};\n  }\n\n  private handleError(error: Response | any) {\n    let errMsg: string;\n    if (error instaceof Response) {\n      errMsg = '${error.status} - ${error.statusText || ''} ${err}';\n    }\n    else {\n      errMsg = error.message ? error.message : error.toString();\n  }\n  console.error(errMsg);\n  return Observable.throw(errMsg);\n  }\n  \n  removeItem(id) {\n    console.log(\"#### Remove Item - id = \", id);\n    this.http.delete(this.baseURL + '/api/groceries/' + id).subscribe(res => {\n      this.items = res;\n      this.dataChangeSubject.next(true);\n    });\n  }\n\n  addItem(item) {\n    this.http.post(this.baseURL + '/api/groceries', item).subscribe(res => {\n      this.items = res;\n      this.dataChangeSubject.next(true);\n    }\n  }\n\n  editItem(item, index) {\n    console.log(\"Editing item = \", item);\n    this.http.put(this.baseURL + '/api/groceries/' + item._id, item).subscribe(res => {\n      this.items = res;\n      this.dataChangeSubject.next(true);\n    });\n  }\n\n}\n"]}